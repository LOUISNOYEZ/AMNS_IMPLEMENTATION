/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include <stdlib.h>
#include "platform.h"
#include "xil_printf.h"
#include "xil_io.h"
#include "xparameters.h"
#include "AMNS_arith_ip.h"
#include "xtime_l.h"

void AMNS_mult(uint32_t* dest, uint32_t* src1, uint32_t* src2);
void display_coeff(uint32_t* src, uint32_t size);
uint32_t BigAdd(uint32_t* dest, uint32_t* src1, uint32_t* src2, uint32_t c, uint32_t size);
uint32_t BigSub(uint32_t* dest, uint32_t* src1, uint32_t* src2, uint32_t size);
void BigMul(uint32_t* dest, uint32_t* src1, uint32_t* src2);
void MgtMul(uint32_t* dest, uint32_t* src1, uint32_t* src2);

uint32_t V[8] = {0xC9BD1905, 0x15538399, 0x9C46C2C2, 0x95F2B761, 0xBCB223FE, 0xDC24A059, 0xD838091D, 0xD2253531};
uint32_t P[8] = {0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFE, 0xFFFFFC2F};

uint32_t A[100][8] = {{0x27e07a3b, 0x2b7f3dab, 0x495d27ee, 0x155c4968, 0x43ce1637, 0x2f9663c4, 0x0b896498, 0x431b1672};
{0x7be6725e, 0x54eb5291, 0x4cd04019, 0x0e3767a1, 0x499a514d, 0x0c8b6aef, 0x1e40027d, 0x054e44c3};
{0x4e375696, 0x7c6e1067, 0x7b543a38, 0x1c271460, 0x1cb25e8c, 0x7771775a, 0x7ef61a23, 0x488b2f17};
{0x1ab51455, 0x4e1d4cc8, 0x7f5f4621, 0x11472c8e, 0x19990054, 0x52515209, 0x302f0f03, 0x42737210};
{0x2a196190, 0x4f4970a0, 0x29e86dec, 0x41905ebe, 0x26857355, 0x0bdd4880, 0x4ce4676b, 0x61be77b8};
{0x3fe66c67, 0x65191adf, 0x07f11b5f, 0x04635696, 0x667d11ec, 0x75a65db8, 0x052633b3, 0x2de959ad};
{0x074e57d1, 0x1e570f7d, 0x05e150b2, 0x74df7aab, 0x170e5339, 0x71206a5e, 0x501a5c18, 0x47fb647b};
{0x557f5c7e, 0x26683740, 0x5d8f7abb, 0x11140921, 0x544e39fc, 0x5d117a64, 0x0e2c3d75, 0x0b365100};
{0x059e7a02, 0x77e16227, 0x14077431, 0x395b7e4e, 0x781600e1, 0x3f83341d, 0x37610bd3, 0x48892d88};
{0x398b6a81, 0x52910051, 0x6b40431d, 0x14e14b97, 0x7b15506b, 0x231a7875, 0x304a1d31, 0x51e41173};
{0x18d10ccb, 0x7e2f21c6, 0x2d226e12, 0x264d43d0, 0x276502f5, 0x234e40e5, 0x05810e44, 0x44b14f08};
{0x3e0f4058, 0x5e1c387c, 0x100c776d, 0x21520960, 0x66da5123, 0x16490c53, 0x448767cf, 0x2d7b386c};
{0x08ae58d3, 0x67894b81, 0x7df957fc, 0x66fd6958, 0x56c3641c, 0x5cc96fdd, 0x11427f12, 0x31bb0923};
{0x29152beb, 0x71920628, 0x1efb3e93, 0x7bef11e4, 0x17a35c0b, 0x39274e66, 0x17eb5637, 0x7d814755};
{0x70fe2ac3, 0x7e372080, 0x07554f98, 0x3ab3510f, 0x0bf832fe, 0x403c642e, 0x056c7de5, 0x18ef6000};
{0x34a41f22, 0x697a73bc, 0x5f166378, 0x1e41188c, 0x017a350b, 0x423b3b17, 0x6b7e4552, 0x55802395};
{0x41895342, 0x208025ec, 0x1dfe768e, 0x74b7211c, 0x20cb0244, 0x35ee04ff, 0x60c62e67, 0x17941bc8};
{0x0ec52fe5, 0x565c6fa2, 0x0b645502, 0x35cf34be, 0x0c66440b, 0x1c0d32cc, 0x74493606, 0x7cff1694};
{0x3e1726f9, 0x40ae24ed, 0x6abc7285, 0x7c5043a8, 0x43066896, 0x3a287d79, 0x7619383e, 0x5ef448a2};
{0x597f181c, 0x7cc04c41, 0x52ed261a, 0x242161e3, 0x147014f3, 0x652679ee, 0x5b534d3c, 0x6f874dba};
{0x7e707e90, 0x65072aaa, 0x6a576d26, 0x4cc866db, 0x746f009b, 0x5d323cc4, 0x6c2d4712, 0x345536b7};
{0x2ada35af, 0x552f4001, 0x58ba0da9, 0x7ec07f64, 0x699e57ab, 0x700d38e6, 0x3da453dd, 0x5c9f5a6f};
{0x6e5b36ae, 0x27d4084c, 0x6d961418, 0x75657cdc, 0x0acf68fc, 0x43547607, 0x3dca0a8c, 0x71007a2f};
{0x0cde0a86, 0x0c31654a, 0x33d26695, 0x0f3350a7, 0x4ffa601c, 0x434a7c1b, 0x2c4536cf, 0x27cf321b};
{0x4da22ffb, 0x375c52fa, 0x19421903, 0x19703bd4, 0x2fed4461, 0x24d6206b, 0x39b83653, 0x023d6b31};
{0x7d943c89, 0x024c3a84, 0x6f3e2fc8, 0x53027d16, 0x7f8c262c, 0x196633f4, 0x2c3d06fc, 0x689f2e26};
{0x300b4f21, 0x55e963dd, 0x66233191, 0x70301dea, 0x61933970, 0x4dff7717, 0x02be0210, 0x695425e5};
{0x6f0315a1, 0x4c0a2217, 0x0a040c28, 0x7bb61018, 0x245b45c4, 0x60e834db, 0x3694794a, 0x6a980bf8};
{0x7d5f7cc5, 0x59c1581d, 0x21011768, 0x44ef6147, 0x718772d4, 0x1f187933, 0x0fa6296b, 0x3b8c0a74};
{0x473303b4, 0x31f2626c, 0x772e429f, 0x6ed67914, 0x5e6f7ecd, 0x3c583737, 0x385366a3, 0x2d416cf9};
{0x71652592, 0x2d2d10e1, 0x6aa40830, 0x76f30812, 0x05921f33, 0x0c6969e9, 0x2b366c0b, 0x222e3d06};
{0x602d18ab, 0x308c25e9, 0x1dc33e14, 0x45ea0b74, 0x41d0352d, 0x023f576f, 0x12814bee, 0x64225692};
{0x1be73a2d, 0x4e753351, 0x37d44592, 0x79865874, 0x177c7136, 0x1e3a505f, 0x74370d99, 0x5a8225c2};
{0x07f80a6f, 0x78617af7, 0x58cc0d6e, 0x4e7b7e9f, 0x568770ce, 0x3d2415ed, 0x1a264a13, 0x76c43229};
{0x60ab2f41, 0x4fe12896, 0x51581535, 0x53ee5c95, 0x750d1f84, 0x70d377bd, 0x5d7055bc, 0x35d070d1};
{0x009c32e7, 0x6df853ff, 0x77506397, 0x0a106dfd, 0x189a5d96, 0x2b8f5718, 0x184b25f9, 0x00ae4d28};
{0x777b7d74, 0x57b91dd8, 0x53f940c3, 0x2173629c, 0x400d64c6, 0x347b6f2c, 0x2dab101d, 0x19600e5b};
{0x00220ffa, 0x29d90767, 0x3c571776, 0x2e3158f6, 0x78144b6f, 0x40086358, 0x49f6488a, 0x516858f5};
{0x6c1d216e, 0x2044043e, 0x307f15e1, 0x115f7cb2, 0x6e437fa3, 0x2d7c09d4, 0x7fae0c64, 0x7e793287};
{0x30914392, 0x788d4f98, 0x5eea23f3, 0x246622f2, 0x58fa2e40, 0x21186715, 0x60323ead, 0x6c7b6afa};
{0x1e591bd8, 0x77cb10f1, 0x2bb26639, 0x66f800fe, 0x497832c4, 0x341c5edc, 0x42421e38, 0x7265557d};
{0x2ff11396, 0x5a9b4afb, 0x0a0f27f6, 0x0a381359, 0x13561df1, 0x294672b7, 0x0004394a, 0x096e7c9d};
{0x41f9715a, 0x40963d19, 0x5e590773, 0x798809a9, 0x6f7444d0, 0x34a4496c, 0x382f1d41, 0x166a3366};
{0x104b69ed, 0x048b7bf7, 0x5cd06667, 0x312e5593, 0x732f5669, 0x671b7aa6, 0x42760d4a, 0x13c96b48};
{0x5ec32a9b, 0x70ed45dc, 0x353e5337, 0x345574da, 0x51ff0070, 0x2f5c68ae, 0x783d6528, 0x1fd14c6a};
{0x57a65481, 0x5ee648f3, 0x6a35462e, 0x1ed17908, 0x388e3792, 0x1d1e574b, 0x348f3393, 0x2b157862};
{0x50815444, 0x13182c65, 0x7127272b, 0x16a864ba, 0x36e1344c, 0x388b1fc8, 0x6d345595, 0x57e264b0};
{0x000a0539, 0x06337c59, 0x39455234, 0x0ca77121, 0x177a4553, 0x41d7450c, 0x5757490e, 0x22d94953};
{0x46f97efc, 0x455e35da, 0x26dd64fa, 0x33c83f71, 0x37e1330b, 0x787a15e2, 0x55db522f, 0x1be40461};
{0x777f51fd, 0x4afa4490, 0x4508395f, 0x683a1544, 0x37fb2794, 0x7fce6452, 0x1fd70ea3, 0x029d6782};
{0x45f43f6c, 0x3a096b64, 0x3f28724a, 0x32ff2f26, 0x42c95355, 0x2b723625, 0x44fb429f, 0x5d2177a4};
{0x200e34b5, 0x31c43400, 0x7c864e98, 0x531220da, 0x36192a3d, 0x358c3986, 0x7716693b, 0x05ea4059};
{0x25392e3c, 0x375f1a2a, 0x76cf38c4, 0x4f932201, 0x195f6fd4, 0x21b92fb8, 0x215c128c, 0x20df4ea2};
{0x4fbe4b49, 0x73174111, 0x42c808c8, 0x22b5334c, 0x21dd3d37, 0x75982d0e, 0x3a1c61bc, 0x1c46253f};
{0x10926813, 0x17a95355, 0x5e9c260f, 0x58cd4a2b, 0x516c672d, 0x3f9775c4, 0x25c6319f, 0x00675d82};
{0x509857a2, 0x7b7e462b, 0x6ed502d5, 0x60ad5000, 0x7f4e7468, 0x067a0b54, 0x39f22510, 0x693c4b9c};
{0x07c50d99, 0x492e6c0c, 0x5b552bd3, 0x31f51dcc, 0x54b71c0b, 0x7d563f71, 0x61011380, 0x29013c6d};
{0x60a23fa6, 0x6b7e01b6, 0x4bb57ba9, 0x4a825e60, 0x467507b9, 0x62bb04be, 0x3b9f041d, 0x44514cd9};
{0x5e9b4377, 0x4e387d78, 0x25c33fba, 0x5253570b, 0x610a7514, 0x673d07e6, 0x35d42fd6, 0x5bf4478b};
{0x31e60d3e, 0x17a1161a, 0x1871562a, 0x51ba29d3, 0x63585312, 0x38e22db6, 0x782b73cd, 0x390f265c};
{0x3cdc3255, 0x3d0d64c0, 0x4aae5b6a, 0x452e7411, 0x082b5cf0, 0x1d930e4c, 0x5b09024a, 0x6e8a1f03};
{0x6a6c6e53, 0x086e09bf, 0x08101942, 0x1bdf61c0, 0x3601565c, 0x6b777ea3, 0x1c9f0d06, 0x06fd398e};
{0x1e5006da, 0x3ff6430e, 0x2ade7c8b, 0x29d03706, 0x2fe34248, 0x54a155ca, 0x5b660a83, 0x4a0926fe};
{0x243a34cb, 0x7a6d470e, 0x419a6fd8, 0x02781991, 0x1278357d, 0x110253ed, 0x4a020cb2, 0x21a34bd7};
{0x52be71af, 0x153b7d87, 0x7b1a24c6, 0x337f2611, 0x11fa17c4, 0x54af2589, 0x15b44c2a, 0x6bba07a3};
{0x6d5a5690, 0x5e271c6d, 0x601828d3, 0x130e48ad, 0x40c3385f, 0x740c6dfb, 0x155c53b8, 0x308a06a0};
{0x7df0277c, 0x0f243d55, 0x442b59c3, 0x29840b5a, 0x3c38540b, 0x7a0408b1, 0x3cba4ee6, 0x64e52d1b};
{0x47d46d88, 0x58233c45, 0x7291371d, 0x0f284a7c, 0x7cec4ae8, 0x131c7137, 0x07b66700, 0x0f39774f};
{0x17ac60e8, 0x13f96fa0, 0x62da2529, 0x6727750a, 0x106571c6, 0x34ea4e69, 0x57421e60, 0x5ad2478d};
{0x29ae379d, 0x40e93cff, 0x7c0d319d, 0x6c4e5e66, 0x76fb7d02, 0x20bb6608, 0x1e176f72, 0x4d380f4e};
{0x6bbb5a9b, 0x1e01458f, 0x07ed14a0, 0x5baf3549, 0x44486f9c, 0x09a709d9, 0x40124a3f, 0x06c84b22};
{0x7cf216b6, 0x25021901, 0x7394533b, 0x540927d3, 0x52f60294, 0x037038d6, 0x498739f6, 0x2e102403};
{0x19e5553e, 0x3b85344b, 0x382c39d2, 0x0a66623e, 0x61aa5036, 0x1084122a, 0x25f4662c, 0x36117002};
{0x1fa810ba, 0x44f52eb5, 0x442f7adf, 0x23df2e2b, 0x28e73386, 0x55c33a0a, 0x6f0e3774, 0x29486ed8};
{0x15f11579, 0x0ecd74fc, 0x4c612a64, 0x0a925612, 0x46531a3b, 0x75c90284, 0x0bad09cf, 0x49f33254};
{0x63d64f93, 0x154a4082, 0x4ce52b71, 0x6d5a5cd6, 0x04d50bc0, 0x663c1e0a, 0x67b57cd4, 0x6a680d33};
{0x27a963f3, 0x4e2104c8, 0x71520001, 0x077c2eec, 0x240b5854, 0x79be3a0e, 0x480850cf, 0x37b75241};
{0x0f862128, 0x3e8a74cf, 0x60bf0bd9, 0x7602033c, 0x66c92b29, 0x37647d3f, 0x008342fe, 0x50f9007e};
{0x6ad30d55, 0x43c924da, 0x27c8584f, 0x406c4ef5, 0x009a1929, 0x70ab5bf1, 0x05cc5ad5, 0x08a453f0};
{0x5cbf7761, 0x1d3c5606, 0x46c366ff, 0x375e54c6, 0x42ca55ab, 0x7fc25411, 0x7a8166da, 0x70822e20};
{0x4f386246, 0x4e0c5a58, 0x448b54f6, 0x08a95c55, 0x35c76f61, 0x42d74f54, 0x43c04b88, 0x5a047f89};
{0x798a6826, 0x41e8528e, 0x39fb2bcc, 0x5ef668da, 0x00e0732d, 0x29df02e9, 0x0ab56951, 0x108b5f81};
{0x18a0376f, 0x5f346e6b, 0x70631b9f, 0x477d4133, 0x715b71a5, 0x6c8b3f60, 0x54ae4a91, 0x5d1d6136};
{0x07ee2d5f, 0x71173ccf, 0x696f6d26, 0x4e523ae2, 0x7d130f98, 0x54414e2d, 0x5a296f49, 0x2c9c4209};
{0x5ed36577, 0x7d876e3a, 0x281855f2, 0x782e2bb7, 0x351f3a9c, 0x7e0f1b3d, 0x5f5c0397, 0x5739491d};
{0x1df324f4, 0x234f4b31, 0x782661f7, 0x1afb2a44, 0x076c5ad2, 0x51725e47, 0x05e541ab, 0x743e6720};
{0x0d984908, 0x434e2aee, 0x3c713196, 0x2a050e0b, 0x56d868ef, 0x1bab1612, 0x5e922643, 0x219e4b66};
{0x45a150cd, 0x051b181c, 0x7d286525, 0x0e787a6a, 0x63f228c4, 0x27fa3f9d, 0x1eef4d60, 0x4af8442e};
{0x64b842c7, 0x5ed039ae, 0x52386034, 0x004a1e54, 0x00511f45, 0x7da72707, 0x211a663d, 0x2994403a};
{0x7d0156d3, 0x770021f8, 0x037d7599, 0x265152ba, 0x4aae7156, 0x125f6299, 0x2a51234f, 0x4853329b};
{0x77fc375e, 0x125773a3, 0x62331773, 0x324556bd, 0x2f510447, 0x704a0946, 0x49bb7b2c, 0x706543c1};
{0x361a00ec, 0x0d884b2d, 0x0a2e363c, 0x140f3e9e, 0x67a65071, 0x7f2b1ba1, 0x2113785f, 0x37d66fcf};
{0x2f290f75, 0x342975f4, 0x392b10fc, 0x0b3e756b, 0x359f429d, 0x53dd3bf4, 0x4f3c20b8, 0x0b573622};
{0x56f43d01, 0x113a5a23, 0x04416df5, 0x3d392d7d, 0x5ae405fb, 0x10e5231f, 0x703b257a, 0x19091d33};
{0x460a37b3, 0x2e8f21ca, 0x77e70a76, 0x6a7c7c89, 0x390408ee, 0x1ca8023c, 0x7c66168a, 0x23b43b86};
{0x39981cfb, 0x7e9e7942, 0x58c107ab, 0x3b5772be, 0x387075de, 0x1e16157a, 0x78d32787, 0x1f74402d};
{0x4c6620c1, 0x7fd11c4d, 0x1331458a, 0x4348323d, 0x334809e2, 0x52f36344, 0x7001204a, 0x76c23c14};
{0x2c0d56c0, 0x063d36f3, 0x62b31248, 0x5bf145cb, 0x08502800, 0x3145731a, 0x0fe21f6d, 0x32a04226};
{0x26043f46, 0x3a374ea4, 0x53cf07e0, 0x1cea20af, 0x72337c22, 0x13062a34, 0x1cd505a0, 0x55ca63f5};
{0x705b443a, 0x0c9e059c, 0x712140b3, 0x2090420b, 0x468e484b, 0x08fa2067, 0x7e715216, 0x6e147087};
{0x0aad0beb, 0x040965f8, 0x568a1b1f, 0x12aa1609, 0x178c1a56, 0x0d286635, 0x49a91232, 0x26132350};
{0x3c8b634f, 0x2a4a3ba7, 0x471269d4, 0x3ebb66e6, 0x633226a5, 0x17be65c9, 0x01872869, 0x21587cb6};
{0x06290358, 0x178e5370, 0x0c2a4cef, 0x53cf2470, 0x191d2326, 0x05a36a6f, 0x114615ab, 0x60e72e4e};
{0x3aa455e9, 0x2bc7137a, 0x1b8f0893, 0x1ffb17c4, 0x424236f8, 0x04176fa8, 0x4a2c2f4e, 0x4ff57c1d};
{0x78402634, 0x430f4c35, 0x39776efa, 0x23a3220e, 0x40ac5938, 0x54bd4e09, 0x627563b1, 0x138c7d17};
{0x08ae61ef, 0x119f2b7f, 0x199f3bd8, 0x61d71c0d, 0x3bc8112b, 0x28904e6c, 0x7d6817ad, 0x31726822};
{0x14ba7928, 0x68d4496e, 0x773956e5, 0x596c290b, 0x2c020337, 0x66bf6c2b, 0x7ffc53ec, 0x5f4b4bd2};
{0x38b27149, 0x1059061c, 0x604a468b, 0x55d71f29, 0x1bcb7126, 0x13ae767d, 0x3444366e, 0x31571e2f};
{0x635e04db, 0x7f250844, 0x32375e5b, 0x6073178f, 0x4ce76bc9, 0x3bf163ff, 0x00a34206, 0x796c1aa7};
{0x50b611df, 0x107e09bb, 0x02980f94, 0x01833081, 0x225436d1, 0x07fb4043, 0x7bc7047a, 0x6f2d5fab};
{0x3ff555f6, 0x104a09df, 0x2b3a6302, 0x38000fc1, 0x69236196, 0x689a18aa, 0x4f340da4, 0x2b372dbf};
{0x4ac57599, 0x2e9500c3, 0x079221db, 0x1e64437b, 0x036a6614, 0x7bfe6827, 0x54fa1eb7, 0x3e7a51fe};
{0x5a477d20, 0x3a8a1366, 0x770a4682, 0x735b77c9, 0x1a7d3747, 0x15033157, 0x2a751a71, 0x51f40d42};
{0x14e4725f, 0x3b26199c, 0x6a3f2c49, 0x1a012f80, 0x671526d7, 0x1a3f0e8f, 0x34e3460e, 0x26c97e8f};
{0x361c0f02, 0x302f2e02, 0x7e6f6e84, 0x39cb79d0, 0x4ebe4384, 0x7d75192c, 0x25305012, 0x5eea0558};
{0x111d0219, 0x3aba66ad, 0x19a801c4, 0x15e22ff9, 0x695d4502, 0x414737e4, 0x048c5f67, 0x639f52c8};
{0x2b3c2443, 0x377f26da, 0x7e3144b0, 0x469903fe, 0x47ae60f4, 0x72367f51, 0x262b1a32, 0x57622627};
{0x157742af, 0x65d85e60, 0x78d31935, 0x6790644c, 0x1a4b307d, 0x039d4c8f, 0x20fd73ab, 0x64862010};
{0x656f598c, 0x2ac30f17, 0x071736ad, 0x690e487a, 0x1b156e40, 0x578e56ef, 0x682f6877, 0x54a443da};
{0x6bfb7609, 0x29085b1c, 0x5eca0d85, 0x18924fe3, 0x7de67d30, 0x27c918f6, 0x5b3d2fc0, 0x4d051bcf};
{0x647c4f85, 0x78423be0, 0x7dea3624, 0x04703d6d, 0x32bb4e10, 0x25c7572e, 0x7a032e89, 0x03f87697};
{0x52af020f, 0x24d21b4a, 0x16951d9a, 0x66705a24, 0x0c376303, 0x28544d83, 0x78536490, 0x74a55f6e};
{0x7c2c2ad5, 0x2246465e, 0x1b7238bc, 0x10071cfe, 0x4c68670a, 0x69287b35, 0x3e716411, 0x26a61a86};
{0x7b9d70aa, 0x2dbf4150, 0x5f3a2c5e, 0x42b34e79, 0x31443ddf, 0x33c57e9d, 0x314a0702, 0x66ec6853};
{0x54471425, 0x3f150bb8, 0x6c77381e, 0x171d6556, 0x79e323d9, 0x41f8022d, 0x6c3f04b7, 0x11f54fd1};
{0x0ccd6fc0, 0x4c565397, 0x6bc340b8, 0x52e25c49, 0x4d170daa, 0x2ca424ab, 0x33272ffd, 0x636417e7};
{0x6895381c, 0x78f82d17, 0x51c131f1, 0x38f8589c, 0x20f57323, 0x64806f3d, 0x0e361022, 0x2f2f7a9d};
{0x2045513a, 0x3d1f3c87, 0x6337058f, 0x708516fb, 0x33b8764e, 0x297a1c17, 0x1ef41c6b, 0x5d953392};
{0x08dd4763, 0x0e370fa3, 0x001727de, 0x28e17cf9, 0x7b664791, 0x1908098e, 0x031e09fb, 0x7b9a4315};
{0x440f0b01, 0x70a34a88, 0x609f49cd, 0x292575f9, 0x2d2d3fb1, 0x74cd2548, 0x09b92d33, 0x7d0664bd};
{0x58e976a1, 0x511a5c83, 0x00431f8d, 0x2e201c95, 0x16fe17ca, 0x3bd75c48, 0x7dbf79e9, 0x087e155e};
{0x7a3336fc, 0x0b693003, 0x73020059, 0x3e4954aa, 0x758055bd, 0x0d2864a6, 0x7c7c673d, 0x1d3f38ce};
{0x507f7e7f, 0x27e900e0, 0x2f0b22a5, 0x23fd4597, 0x55845e77, 0x3d373692, 0x04e06b95, 0x7b2521a3};
{0x38b71312, 0x65fa035e, 0x1d68401b, 0x25797276, 0x3cb94858, 0x25106299, 0x74477371, 0x4dc8212f};
{0x3b681ba5, 0x0ceb2de1, 0x3d383ecf, 0x79c04a27, 0x6cc21a3f, 0x216e2b94, 0x734b6ea6, 0x0cd65c0a};
{0x69a5012d, 0x0cdc3f03, 0x56da43fb, 0x083d72c5, 0x26de4b6c, 0x230f0b89, 0x62211eb7, 0x522a7346};
{0x396c0eba, 0x0e6958af, 0x2f9205b2, 0x32b0406f, 0x667e4dcb, 0x00c51277, 0x77c616c5, 0x0ad87cbb};
{0x6b040734, 0x40994158, 0x0a5e6ae1, 0x441e5cff, 0x4bf936e0, 0x21ac2fde, 0x2b1359f7, 0x21ec687d};
{0x3e521c67, 0x4eab3a71, 0x5ee00cf7, 0x66160294, 0x20817fc2, 0x07840663, 0x151a7b9a, 0x56747fdf};
{0x0edd4f0e, 0x75b94cc7, 0x16ff37b5, 0x6aa31c8c, 0x3811069c, 0x6f700400, 0x28233a19, 0x68961e3b};
{0x11e40d53, 0x03f95050, 0x77ec6e45, 0x3f3a2ec1, 0x4c933acd, 0x75f3667f, 0x220f38cc, 0x64f2259e};
{0x1b3726a5, 0x54c207b7, 0x4fc2515f, 0x415500d5, 0x6b2f5a88, 0x0ee12058, 0x265b7805, 0x05b015e7};
{0x4fe82e26, 0x789b5b74, 0x7b7c4745, 0x7d64271c, 0x707b0d94, 0x205a55f4, 0x496c6e04, 0x3f9a721f};
{0x4a1a7fe0, 0x3a3e7c90, 0x7bb102c7, 0x41ba3d40, 0x595a768c, 0x3689014c, 0x66c370a3, 0x0cc334eb};
{0x68274f8a, 0x0ad86104, 0x3e59399e, 0x73dc11cd, 0x66030abe, 0x6f003be9, 0x09fb3ee9, 0x03b32d8b};
{0x498f70a7, 0x36b419b9, 0x55d33ad6, 0x195c6936, 0x6a9a4290, 0x50f00745, 0x1e6224dc, 0x455644ae};
{0x1e694625, 0x2cfa2a29, 0x694b6af9, 0x09e958fd, 0x5af148f4, 0x5e2e4387, 0x36825324, 0x62876409};
{0x3b9c32e2, 0x0ead319c, 0x0d300c72, 0x29c30020, 0x7af74a7c, 0x7c9c76ac, 0x76403996, 0x2af27298};
{0x0a756a9f, 0x6547440a, 0x791904fe, 0x3ad52ad4, 0x510e62dd, 0x7e2c5bf6, 0x75ca565c, 0x215c65c2};
{0x364c2479, 0x3ab07aa0, 0x44d12e84, 0x08756164, 0x5a7a3e38, 0x0c1777e7, 0x0b6577ba, 0x6d1e5011};
{0x181519a1, 0x4e087fd0, 0x3e8d3554, 0x15e67979, 0x1e227722, 0x7342385d, 0x429b783a, 0x197b46de};
{0x43a44755, 0x67450f2d, 0x13bd7bf5, 0x7efc506c, 0x4d2a71ac, 0x05e91760, 0x6eda4c31, 0x6f625281};
{0x070f33d3, 0x158472a2, 0x5e6d2da4, 0x3e657b15, 0x6bf5286a, 0x75b84fe4, 0x6bbc6c66, 0x382c5f84};
{0x61ae415c, 0x74f46dab, 0x04fc73ab, 0x0ae0749e, 0x0b105cc1, 0x2498457d, 0x25a647e1, 0x49465350};
{0x6b2c1ddc, 0x7e0575a9, 0x51822395, 0x6b9a29cf, 0x384e1d5e, 0x51d55db5, 0x13f76a87, 0x7eb74bdc};
{0x02715c77, 0x78467882, 0x17973890, 0x5da75964, 0x40321b5d, 0x56ae56a8, 0x28d11fb4, 0x46530fe6};
{0x2c344065, 0x5dd1260c, 0x649450d0, 0x68cc43d0, 0x54f700a5, 0x67e260f5, 0x32122e45, 0x02636c0f};
{0x0bf5068f, 0x39c2761b, 0x3e95118b, 0x5cdb6e25, 0x0c9a6d69, 0x3eb30348, 0x65642c91, 0x661029ac};
{0x05ef0815, 0x1f3164f4, 0x386b72fc, 0x15444b3f, 0x67b600e8, 0x2c271ccf, 0x10d6774a, 0x6c796445};
{0x5843518a, 0x35f110dc, 0x60fe6983, 0x22030648, 0x045036ce, 0x332d67c4, 0x3c666b5f, 0x5c062608};
{0x08256595, 0x406d5789, 0x41ce4bc2, 0x644b0645, 0x6a5450cf, 0x26ec1869, 0x4f0b093b, 0x7a411ca5};
{0x35627352, 0x1d59572e, 0x59db4f62, 0x7aa85937, 0x2f5a7f72, 0x3ea60486, 0x02df7d08, 0x0fbb6e63};
{0x169d4d8c, 0x53cd66f2, 0x498620ca, 0x5d277f0a, 0x2a992701, 0x74791eeb, 0x5f792bc3, 0x7d034158};
{0x655a45cd, 0x54843b7a, 0x7833760f, 0x68510259, 0x09c2733f, 0x1fa53df5, 0x01d72673, 0x1cb95026};
{0x692038a3, 0x7f994058, 0x6c5c3bbb, 0x1b2003b5, 0x4a4c3e27, 0x45153f7e, 0x08e72a88, 0x5a074286};
{0x1e3446e5, 0x73fa1426, 0x7f0e3472, 0x20860116, 0x0390621c, 0x48b35c79, 0x76575088, 0x52887cb7};
{0x0b762382, 0x7e1854e2, 0x1b156a3e, 0x4d80266f, 0x3f3754e8, 0x5d0a4d4a, 0x661f5532, 0x0a945455};
{0x09f71881, 0x48411b9c, 0x25740573, 0x0cd038d6, 0x00ca3ff0, 0x60570c7a, 0x1166082f, 0x34ae0980};
{0x5d670ed0, 0x1d9359b9, 0x1a7c7dfa, 0x378d3d5f, 0x53202ded, 0x149e5f76, 0x65e77f6a, 0x1bf46ef0};
{0x46ab0088, 0x51e37042, 0x166e07fa, 0x4ab57101, 0x597a24a5, 0x41195e60, 0x780d7e50, 0x7ab56fe7};
{0x12bb7f35, 0x40524804, 0x03584c98, 0x309162ae, 0x23d00fde, 0x581a512a, 0x4b0800d8, 0x2f6d4e7d};
{0x665868e4, 0x45681482, 0x71037eef, 0x2bbf54ff, 0x59a74c22, 0x79814694, 0x435307d3, 0x10250d56};
{0x33397d5b, 0x5c9d5cec, 0x42702fbf, 0x23d27483, 0x230f4562, 0x27c64190, 0x2c4a3523, 0x7a487325};
{0x6f075f7c, 0x0b566ec3, 0x483c513a, 0x35767439, 0x415a164f, 0x4c181d7c, 0x00401da0, 0x14842334};
{0x1aaa15e7, 0x7cbc1999, 0x188d0518, 0x10991507, 0x16a41d21, 0x17e913cd, 0x74747bf3, 0x45cd210f};
{0x5ac01638, 0x4037496c, 0x231f09c3, 0x21614215, 0x449a0714, 0x2f651f81, 0x2fdc5ca0, 0x5b5c56e9};
{0x78d65984, 0x3ef64332, 0x1a772e4a, 0x0a2d2a61, 0x185969c4, 0x50cc6f0c, 0x625038f2, 0x6f436064};
{0x17896300, 0x349252e7, 0x7cb75773, 0x5d0815fc, 0x0b6f4659, 0x4df06d0b, 0x473005b9, 0x6c3431dd};
{0x51855cd8, 0x559562e0, 0x30f610fe, 0x37d85eba, 0x15f401f3, 0x0eb83e73, 0x08a453c6, 0x67f47d4b};
{0x076c3fbc, 0x6cf01d9b, 0x44090d30, 0x09f32b57, 0x31e12006, 0x06420a83, 0x2f437dd4, 0x02952178};
{0x7c7f388b, 0x06df45ca, 0x18d216dc, 0x54e0203a, 0x513e4055, 0x21f3312a, 0x4e393817, 0x352607ed};
{0x00704a54, 0x21d81ff0, 0x5c1f21e3, 0x7dab218c, 0x47f90403, 0x6ae2604f, 0x451d4dda, 0x0e067722};
{0x258b0946, 0x2d1d7d19, 0x62d22d8b, 0x308e2108, 0x5fff0393, 0x6ec53a5a, 0x6dd7558e, 0x70225471};
{0x4c9d44b0, 0x3fd2344e, 0x1c003075, 0x41b77c05, 0x51be0638, 0x42583ad9, 0x59c722b1, 0x320f6843};
{0x4c736fb1, 0x36965df4, 0x73c046b4, 0x2e2a574d, 0x2bff2e54, 0x6d78112b, 0x76451fd2, 0x46307b00};
{0x29fc14b9, 0x6766191d, 0x4eb477cc, 0x139f2228, 0x47395e8e, 0x072d4a88, 0x32484d43, 0x46380e43};
{0x44fd1073, 0x25940184, 0x046257fe, 0x44fc7d30, 0x73052741, 0x2a5330c4, 0x4a4d0e8c, 0x789757c2};
{0x4a944455, 0x6d1d70c5, 0x33445ad2, 0x64ec5f5f, 0x147068eb, 0x67e823c3, 0x07a84276, 0x560a668a};
{0x36f21434, 0x105d44f0, 0x21805b12, 0x004b10da, 0x46db5902, 0x459d584e, 0x20b51d64, 0x5ca10ade};
{0x546e016d, 0x597e41ae, 0x7cb7606d, 0x5b256311, 0x196d2539, 0x47113ef4, 0x06f01b34, 0x210c5280};
{0x1e19279e, 0x213a4961, 0x2be44d97, 0x7f615473, 0x0d47323e, 0x739f0af0, 0x04464c01, 0x5b94787d};
{0x61901dea, 0x69127641, 0x52153387, 0x4fd240a5, 0x2a38375e, 0x3b317882, 0x51271464, 0x1ac7178d};
{0x4a3c7b57, 0x167373ff, 0x58553136, 0x75844e22, 0x0012259d, 0x7ca10fd3, 0x53c81e0c, 0x72b948c6};
{0x00040fb2, 0x0c5f5ce4, 0x4e662307, 0x507b6f85, 0x0ed76744, 0x0ecf10d5, 0x7b550eee, 0x6ac15f1a};
{0x5f214407, 0x42506df1, 0x2f9a0b97, 0x29fd480f, 0x2d0429c9, 0x3cea721e, 0x42031b2c, 0x335867e2};
{0x31d270af, 0x67ef2800, 0x00b321d5, 0x1ea94b18, 0x035420d1, 0x40732c55, 0x0e820fb9, 0x6c84368d};
{0x54913a57, 0x0b192460, 0x0e7c6661, 0x78145063, 0x75e43967, 0x24c400fa, 0x55bf4f0a, 0x42b905f8};
{0x6d007ec7, 0x544a6dfe, 0x6c0346d9, 0x2fe312c6, 0x37b673ef, 0x02a5536a, 0x07b73faf, 0x2f980f50};
{0x76541aee, 0x6b154873, 0x25c34f3d, 0x4f103946, 0x107c5322, 0x38754f8f, 0x69c3494e, 0x5a231731};
{0x1b981be4, 0x5df62944, 0x075f4cfb, 0x2db269f7, 0x50061485, 0x3bee727c, 0x57fc6bb7, 0x77833ec9};
{0x64322676, 0x708d4f53, 0x7a3757d2, 0x323b18df, 0x0692799f, 0x10463504, 0x2cd81d9f, 0x46e053b5};
{0x1ba14ded, 0x457d383c, 0x3dce1323, 0x759d5813, 0x644b5a7a, 0x06d559f3, 0x645704b9, 0x3bcf7e62};
{0x11f32194, 0x3dc97227, 0x649f15c9, 0x38db4957, 0x35ef3389, 0x587f4c82, 0x21c663a5, 0x6a3637ab};
{0x3f243eca, 0x7f675d4d, 0x6e581c39, 0x192c4882, 0x008d41b8, 0x31e33e37, 0x05d21f9e, 0x28036b82};
{0x475e54f2, 0x09112e18, 0x11c522c9, 0x0e3968d5, 0x505b0b86, 0x51687530, 0x1f553709, 0x396e033b};
{0x4c283c63, 0x343a3ede, 0x6c050f25, 0x5de70aad, 0x24d56a26, 0x3f9e37b0, 0x0974754c, 0x1ba80790};
{0x203d0d38, 0x1cad444e, 0x026f1c7b, 0x719d5982, 0x5b9d103e, 0x4f495237, 0x504c3773, 0x3dcf3a8f};
{0x7cb538a0, 0x40806759, 0x7dde36cf, 0x3d5751fa, 0x452a17ac, 0x669042c6, 0x304562ac, 0x2a4537f6};
{0x0c561b0e, 0x56e439f0, 0x0b662486, 0x364e4186, 0x317f545b, 0x3a694abe, 0x3375088a, 0x14a325cc};
{0x7ed34969, 0x34c04525, 0x5eea021f, 0x650335d2, 0x49943232, 0x11413fe2, 0x2f4e68a6, 0x1b62461b};
{0x4f71531a, 0x2a005827, 0x55726094, 0x43960b08, 0x7fc76e82, 0x0f1109ee, 0x1b9651f7, 0x6f30511d};
{0x748b28a6, 0x55832aaa, 0x3e3203fe, 0x3673319e, 0x0e1b45a0, 0x5e38736a, 0x2f962c23, 0x6a885f67};
{0x01580e07, 0x1c472c1a, 0x5d5a7a4a, 0x14bb6430, 0x483e795d, 0x5d897eef, 0x2f783f62, 0x12c00ca8};
{0x73e4343f, 0x1b504e50, 0x3ebc7352, 0x473024c4, 0x62c801de, 0x1ffd05c8, 0x4e257609, 0x473d1542};
{0x0dd2287b, 0x480206f2, 0x73e81f52, 0x39063f27, 0x60ac1394, 0x4a195ce8, 0x69e30071, 0x58996c95};
{0x06e76e1c, 0x32af4a7f, 0x77922b05, 0x60c152ae, 0x0ba23ad5, 0x5d180362, 0x1c043342, 0x150c5d14};
{0x34a6031e, 0x5b787dd6, 0x3de20154, 0x53bf5215, 0x72d95fcf, 0x0d091b01, 0x199f48cf, 0x2e03490d};
{0x2b9b7c25, 0x7c281d9f, 0x73bc29fd, 0x00ae62c2, 0x40b1686b, 0x50125ca2, 0x1e3a74b4, 0x6b7a1045};
{0x099d029a, 0x18f369ef, 0x341155f7, 0x1c2e1722, 0x7c8c04b5, 0x72a07464, 0x61735022, 0x14483e38};
{0x54082843, 0x0c442a18, 0x32401324, 0x5880606a, 0x2dfe2689, 0x677165ef, 0x4dcf6f49, 0x16116c3d};
{0x747f0f94, 0x56b96864, 0x233d56e4, 0x5d9b4c74, 0x4f8f2cee, 0x5b276836, 0x38285213, 0x20af2c3d};
{0x6636605c, 0x2b8a3652, 0x26282d60, 0x4dbe3b0d, 0x73903518, 0x45c057b0, 0x17cc7be7, 0x14581265};
{0x311416b7, 0x7f135a5e, 0x2c2e41c3, 0x774d7436, 0x11a80723, 0x3ae639a2, 0x68860e49, 0x7c7f3744};
{0x3c2e3659, 0x56836cb6, 0x367c639b, 0x79f04612, 0x257077fe, 0x41844e4f, 0x5d381778, 0x19d70823};
{0x4f2308a8, 0x10496505, 0x43ab583b, 0x5c8d548e, 0x3ca045fc, 0x1a256fcd, 0x1155486d, 0x65014777};
{0x23f76023, 0x3db55baa, 0x3e4244bc, 0x2a9f38e3, 0x4ba47725, 0x65474a33, 0x731b62e3, 0x0e1736e0};
{0x32765a12, 0x1ca37180, 0x327e5ff4, 0x14a377a4, 0x1e3e2020, 0x152c55e2, 0x255d4826, 0x2b7d08fc};
{0x5f9937a0, 0x45aa7597, 0x0c8403ab, 0x61522ee7, 0x62365e73, 0x6f902fc4, 0x227e2310, 0x0c9f6c05};
{0x12d3039b, 0x4a692cf8, 0x156d2297, 0x3ad72ba1, 0x584c5038, 0x5c427b07, 0x6b66591d, 0x353a6bfb};
{0x251d3aba, 0x06ea10e6, 0x64497750, 0x53912786, 0x592d7dd2, 0x52e8476a, 0x286840e7, 0x64f758f8};
{0x7c0301eb, 0x53e20894, 0x5d416dcc, 0x7e7002ad, 0x609014eb, 0x33b13264, 0x7e374af9, 0x7b82249d};
{0x1e8a0b58, 0x4dfb67fd, 0x7c9a1a93, 0x6ae40628, 0x14924929, 0x35d63d8d, 0x35e14950, 0x1aa81323};
{0x4dce55ab, 0x0757397d, 0x4ec1133a, 0x22b852ef, 0x00d430e2, 0x73bf1323, 0x4c997163, 0x0b9b2b09};
{0x69e86f62, 0x1b671946, 0x007e0c5c, 0x44d41235, 0x6c6c585f, 0x72e22295, 0x6ff16d33, 0x653913ed};
{0x3bfb0383, 0x471038da, 0x02b7688a, 0x7ef53690, 0x56de6ac4, 0x08b57869, 0x19542403, 0x06ce3b68};
{0x193f50bf, 0x23b62727, 0x0efd0f93, 0x32e87715, 0x2cc3675e, 0x18946aea, 0x6fa10178, 0x303238bd};
{0x4e54141a, 0x095543d4, 0x65e94763, 0x7e700bb7, 0x54760d3a, 0x72db0161, 0x7b303e80, 0x226355e2};
{0x32983d59, 0x4f6e780a, 0x3b1f0b20, 0x3aa94431, 0x15a0560d, 0x69756ef4, 0x41f87f07, 0x1b1c42fd};
{0x609f1419, 0x586e5b93, 0x39210d6e, 0x2071748d, 0x3f6666ec, 0x46781130, 0x5cf52083, 0x27a23e9e};
{0x2ffa6717, 0x3b195656, 0x0bed09eb, 0x159d6cef, 0x5b0a2854, 0x5c0c6b1c, 0x67fe02c8, 0x797e5814};
{0x22a51427, 0x52a2453e, 0x11251c53, 0x7840573a, 0x31754a81, 0x2bd54f01, 0x7d6a2db3, 0x73d37dc5};
{0x7f6e23e1, 0x373e7073, 0x7c6e3adc, 0x314e48b8, 0x2509061b, 0x1ae17fc8, 0x56bc4da4, 0x52e0016a};
{0x182e28ed, 0x2a3b09fe, 0x56bd59b9, 0x2d245de5, 0x186a0ea2, 0x5f3b25fa, 0x6f584db9, 0x783d5f7e};
{0x02fb6d9f, 0x486658c9, 0x7baa70dc, 0x2f4412f5, 0x0fa53b4a, 0x047d3161, 0x77394481, 0x62ca2c67};
{0x19026b13, 0x257f76fa, 0x46b32f48, 0x7a6776b7, 0x360e0df6, 0x30f04543, 0x19876c3c, 0x3a2973f2};
{0x10a96239, 0x271805c0, 0x6caa22d1, 0x65056b0c, 0x2ae737ca, 0x2b676850, 0x267e7049, 0x18c52a73};
{0x50e87740, 0x1eb71d5b, 0x71ce0aa9, 0x2f4f53d7, 0x20292726, 0x053c2005, 0x36bf78e5, 0x52df0f49};
{0x72804398, 0x3fdc51c0, 0x26756ba5, 0x5c1b5467, 0x7ad60f81, 0x562770fc, 0x35917de2, 0x185830f6};
{0x3fa96e1c, 0x042a5248, 0x3cd55d84, 0x2f256b6d, 0x40833cd9, 0x54696d68, 0x55c8675c, 0x6fa749aa};
{0x668977a2, 0x333a7b31, 0x74130a3e, 0x520e366c, 0x777a7a58, 0x7f467bcc, 0x697c3e36, 0x390c5958};
{0x390d7450, 0x58222eea, 0x60911d80, 0x713077a3, 0x54e335b8, 0x2abe2893, 0x59692f48, 0x51c97f3d};
{0x1ecb0840, 0x55bb247b, 0x148d6186, 0x38645c85, 0x0cdc5437, 0x554b1d2a, 0x7b47262b, 0x06682101};
{0x64dc3284, 0x30e51068, 0x69ca4446, 0x00ba769f, 0x6f127c6a, 0x288210af, 0x786c4c51, 0x4e8c502c};
{0x414e235b, 0x2fe65406, 0x3aea7863, 0x34a77619, 0x1b031d07, 0x3abe4d7d, 0x17f84eab, 0x3ff46959};
{0x3ede555f, 0x38bc17eb, 0x39474f7e, 0x7d092a89, 0x74d97f98, 0x01fe28e3, 0x3d973e20, 0x4f3a209c};
{0x681b1ad9, 0x7e44743a, 0x0e3279bf, 0x205e168f, 0x75f778ae, 0x4628692c, 0x6099749d, 0x593877c9};
{0x16db0d8a, 0x2def2a9b, 0x03d240cf, 0x1966198a, 0x1ffe31ea, 0x7f7a3858, 0x07b3085d, 0x511918b7};
{0x213964a4, 0x315b5380, 0x296e3481, 0x09123551, 0x65c12f16, 0x421030a1, 0x6a3178e8, 0x79bd75b7};
{0x109a0fad, 0x62c6719f, 0x52311de1, 0x1d190dca, 0x7e490a07, 0x7d3d4a35, 0x098732b0, 0x657224a5};
{0x6eb01aa2, 0x6db6243e, 0x1ba51b91, 0x304a2dc6, 0x26682c25, 0x2cfe4843, 0x3dc96076, 0x7d0a708c};
{0x23e4146f, 0x3d895a20, 0x012d705d, 0x636a1570, 0x71840298, 0x6b912da3, 0x49dd48bf, 0x318c748e};
{0x46897abd, 0x0bda7cdd, 0x67df45d7, 0x0b8e3f56, 0x67f47fc5, 0x397a387a, 0x5868542e, 0x72a759b1};
{0x1c815878, 0x387f1545, 0x418e45eb, 0x5ba102a4, 0x2f751a44, 0x4ebc75ca, 0x237b5a35, 0x6eb17c99};
{0x12cb66db, 0x185157c6, 0x05246e3a, 0x44660d69, 0x4e6e5ddd, 0x4e0d6dae, 0x2b1620f8, 0x1e1d068c};
{0x1a391c71, 0x61f11837, 0x181c3032, 0x09056b90, 0x41e653b4, 0x3f0779d1, 0x452a7ab8, 0x6a2774ee};
{0x317e64e6, 0x53a21360, 0x5e7d73a5, 0x385b1f67, 0x71dd1e55, 0x053e3847, 0x1adb37bc, 0x76f33087};
{0x10d42502, 0x5c271c1d, 0x5d9f44db, 0x02df2a59, 0x069d3590, 0x68ba54e1, 0x31b241f0, 0x053759b6};
{0x74ab1ec5, 0x32557212, 0x52f158fd, 0x78f460b9, 0x5e493d15, 0x2d964cad, 0x00c02d62, 0x28b17509};
{0x48193ad2, 0x5d691e20, 0x3ede1d8d, 0x74775d2a, 0x2f624a7f, 0x0c1d6621, 0x3fdb4b87, 0x35296b19};
{0x22596260, 0x5cf21a46, 0x3589452b, 0x4bba20c5, 0x13bb5a04, 0x499c4349, 0x29cc3ad3, 0x12e05579};
{0x5bd12a8a, 0x2fff5f68, 0x3ca257f1, 0x1d156629, 0x41ff2129, 0x7d7850ba, 0x1a6d3722, 0x03452d3e};
{0x7490219f, 0x30021663, 0x4d4c0317, 0x2a3412f4, 0x0639390c, 0x0fd81881, 0x57083cf5, 0x49073741};
{0x3bc444d1, 0x3230651c, 0x2bb315af, 0x50016b7e, 0x183a4c37, 0x25127bd3, 0x402f286c, 0x0cd3684e};
{0x1958726a, 0x3c0d54d1, 0x554201a9, 0x41ea4eae, 0x1dce4214, 0x6ad22cbe, 0x3d7a34b1, 0x12ae63c8};
{0x2bba5e50, 0x56467865, 0x34d97c6e, 0x74825752, 0x5fdd6251, 0x7f341295, 0x03ea470a, 0x031a2870};
{0x32ba0ea9, 0x459927f7, 0x7c7353ca, 0x74644f5c, 0x367f0105, 0x79134469, 0x062c46f0, 0x6b5d0876};
{0x437b4faf, 0x2287266a, 0x54dc35d6, 0x05e257cd, 0x1aae7e1e, 0x1c260428, 0x0c663ea7, 0x2b633dcd};
{0x56bd5444, 0x4530463f, 0x65e83060, 0x572b7464, 0x205625c5, 0x0d2207e8, 0x4e263c98, 0x029d36b3};
{0x6ece7595, 0x313c4054, 0x5c836f90, 0x13675f16, 0x1e763e47, 0x203003b3, 0x546b3ee9, 0x5ef63c8c};
{0x0f6a4523, 0x67594a10, 0x28a87254, 0x33c60130, 0x1f5a043d, 0x2d8703a5, 0x266e0292, 0x3bf563e7};
{0x6d7d30aa, 0x30ac5b4a, 0x70975b44, 0x405a2356, 0x14fc4573, 0x439a085e, 0x2ac17b78, 0x0b1b7cd7};
{0x5ac7072f, 0x0c9d31d2, 0x4fbb188f, 0x07bd1d26, 0x6b931455, 0x14cb2806, 0x140e29c7, 0x2eee697a};
{0x534e6597, 0x63215075, 0x09e12e99, 0x44031eb4, 0x7c0a3a4b, 0x52ab4d53, 0x322f2bfd, 0x311a1ad3};
{0x2adf644e, 0x49825fee, 0x5a2a45f8, 0x049953b0, 0x310a71f6, 0x31754975, 0x100e671e, 0x270e04d5};
{0x080a7d04, 0x1ee13cfc, 0x75262338, 0x69a90f59, 0x25664777, 0x2dac51b7, 0x617f0c20, 0x663a76aa};
{0x65b74a69, 0x66921aca, 0x3afc4176, 0x0fe01435, 0x0fc65d06, 0x260d2059, 0x0774137e, 0x23e0575e};
{0x47796398, 0x4e350208, 0x533176c9, 0x1095776c, 0x36d91b9e, 0x48e558b5, 0x03775b88, 0x53c43484};
{0x65594b69, 0x60550ccf, 0x593975f3, 0x431d321d, 0x1bcf396e, 0x491b491a, 0x5b4a2bd1, 0x58e9667e};
{0x216209fc, 0x6f6544c1, 0x18c96af3, 0x2c101d16, 0x2a2b6968, 0x2c9e6972, 0x36e05dde, 0x37003c88};
{0x77cc1d34, 0x67524465, 0x0fe97256, 0x6bd564cf, 0x5d2e0f17, 0x25284420, 0x609850fe, 0x2db31b9d};
{0x798e64d8, 0x14b96e4e, 0x0eb5455e, 0x43600a7f, 0x4d24677f, 0x751f4f19, 0x6e815ac9, 0x61363adf};
{0x5f1819b4, 0x601133f5, 0x2e156987, 0x0b9247b5, 0x4fea09e8, 0x78bb75d2, 0x606447ed, 0x3dc54424};
{0x07c66cd3, 0x64792bd8, 0x51be4fb3, 0x71cd0dce, 0x418c5088, 0x52af18d0, 0x71241df2, 0x37ae1fb0};
{0x51463ecf, 0x631a31e5, 0x76c5326d, 0x57db5a36, 0x640b79c8, 0x365d269a, 0x17b87986, 0x58a71179};
{0x57d01e95, 0x18ec6e86, 0x52ac579a, 0x66a1392c, 0x7d2a632e, 0x099819bf, 0x598f7700, 0x33af1f24};
{0x785c2e6f, 0x3cf6789f, 0x20ff47f2, 0x3a397fba, 0x7d9a52a1, 0x049502df, 0x379b72b1, 0x01e21906};
{0x49747ac7, 0x005b6b81, 0x56472eba, 0x652262c0, 0x49c76216, 0x72206910, 0x168b399c, 0x62833163};
{0x72652e7b, 0x6e2c2689, 0x57cd48fd, 0x50337fa9, 0x749e2c5a, 0x3deb1b0a, 0x65166456, 0x70fd5432};
{0x107c0611, 0x7d0e1bf0, 0x75562abc, 0x449a24b3, 0x452b13eb, 0x789061e8, 0x6ae03d6e, 0x65701294};
{0x516628db, 0x2b443e0d, 0x3a367877, 0x6b51056c, 0x151f42db, 0x70e76381, 0x392f235d, 0x11802064};
{0x34ae491a, 0x054d3cfc, 0x1ca32547, 0x704f5d2c, 0x611e4353, 0x1d302372, 0x6d565e1d, 0x71bf42e0};
{0x1b692b77, 0x5cc62592, 0x5b433d46, 0x111b2069, 0x1f26760c, 0x601234ad, 0x40f028ae, 0x02f33f06};
{0x11d4508b, 0x23604fcd, 0x0cf47c04, 0x678a2e54, 0x63683ef6, 0x744710d3, 0x08b57b52, 0x50b8066e};
{0x4a756837, 0x1f3b2780, 0x41fa2253, 0x7b1a4409, 0x46b949d5, 0x01f34af6, 0x7d611131, 0x18df557f};
{0x57b42d0b, 0x758e198a, 0x5b12109b, 0x3d927e52, 0x65d0597e, 0x261f5136, 0x7bc478b4, 0x5fa26567};
{0x4c933503, 0x432b723e, 0x69655686, 0x16d547b4, 0x33e3661e, 0x011346c5, 0x63891dcf, 0x5acc6d37};
{0x0a177343, 0x2e21235c, 0x6fc548b3, 0x19b1774f, 0x56206990, 0x6efe4fc1, 0x594c3dec, 0x0fc72bf2};
{0x03ca0bc3, 0x4d1c1836, 0x408c2cc7, 0x05d466d3, 0x02a916cf, 0x3bf82c80, 0x5c70336e, 0x04407396};
{0x00c43bda, 0x135f3a6a, 0x07d40df4, 0x372d0773, 0x761e49d7, 0x1f2d3b9c, 0x081536a1, 0x666d6a38};
{0x46220a5f, 0x75980fcf, 0x2a751bff, 0x1da040cc, 0x43154bd0, 0x452c6491, 0x451e5af7, 0x04c53a04};
{0x67852379, 0x7f916fdd, 0x34094e08, 0x654f60e5, 0x5b9358f8, 0x1af407f0, 0x42e7527c, 0x7cdd7460};
{0x5da372bf, 0x29263371, 0x7e2a3f14, 0x67c05909, 0x792e1909, 0x63373b5e, 0x6e9c4153, 0x7fe275e9};
{0x3e204ac8, 0x60fe18dc, 0x592a7a94, 0x075f79ce, 0x7046799e, 0x5a9a6be5, 0x188a0525, 0x005f6293};
{0x08562acb, 0x084f4184, 0x06b354f0, 0x21bc16f0, 0x1cfc3662, 0x109f6151, 0x1df13768, 0x4d2040ad};
{0x585e566e, 0x39f04e90, 0x30000943, 0x14a50c55, 0x7201126f, 0x6a6962a2, 0x6bc54643, 0x323a10f9};
{0x78423c6c, 0x67995c70, 0x03164079, 0x3d1d45eb, 0x1a887fc4, 0x7bee6ad0, 0x0c253220, 0x780517b8};
{0x5e076f14, 0x20ad6e20, 0x455373ba, 0x186816a3, 0x728a0e13, 0x6aa72b50, 0x7362117e, 0x67b81fb9};
{0x536f5588, 0x4f8e0a9e, 0x265d0899, 0x5f6a1561, 0x51d97515, 0x07ab5045, 0x66414a62, 0x401b5c72};
{0x4ae34161, 0x3f7e18b5, 0x79eb37a4, 0x31f25adf, 0x57aa5b33, 0x0f9d4916, 0x3a276680, 0x0a1f72fc};
{0x33e64808, 0x7cb63674, 0x17905837, 0x622b18ba, 0x16f73a3f, 0x4a5f6e17, 0x4d4b3d15, 0x18ea5444};
{0x6eb97dfe, 0x54ab3377, 0x028f56a7, 0x14895f32, 0x5b296c77, 0x2193031d, 0x1edd48ee, 0x16b832e9};
{0x27ae09d5, 0x5f982e5b, 0x71b57e3b, 0x52e9475d, 0x31eb1728, 0x0e9104ae, 0x564e6b23, 0x29f92894};
{0x6d535992, 0x327c678d, 0x6809566b, 0x07766dc4, 0x0acf3886, 0x7cd0648c, 0x544c4073, 0x1ecb4ba9};
{0x30cf34d5, 0x1cbc24bc, 0x43d66d8c, 0x732a7cb4, 0x5ebc77ba, 0x52c93872, 0x0a4f5973, 0x4ed066cb};
{0x3e770cc6, 0x3f392220, 0x071f4099, 0x660114bc, 0x48643a09, 0x119e3c8c, 0x613b58b5, 0x47a06d63};
{0x455206f2, 0x0caa2ffd, 0x10fa3d14, 0x38797826, 0x4d726bdb, 0x499011cb, 0x665830ed, 0x16f70052};
{0x2dee5442, 0x75291457, 0x109a22d9, 0x1f712643, 0x49af6fa7, 0x64431e45, 0x2073215c, 0x4a7e0c40};
{0x4f3e6213, 0x3beb4a88, 0x502a27ba, 0x4c5b5d1b, 0x22162775, 0x596c7d21, 0x5b703e79, 0x45f74a8f};
{0x5b8070ad, 0x6295335b, 0x09410ed2, 0x37103880, 0x18795c09, 0x0d0860de, 0x40bd2e11, 0x74af6068};
{0x2c9b4c20, 0x6b0652c3, 0x6c6d0c66, 0x0c5a32fb, 0x74af026f, 0x1ce84adc, 0x4ea072ff, 0x53567eec};
{0x3af426b0, 0x29c53853, 0x49de1a2d, 0x4424259c, 0x128a05d6, 0x38351f80, 0x44df167c, 0x27796602};
{0x2f726f00, 0x0e830b18, 0x44cb6e00, 0x09fd652f, 0x514578b1, 0x62892f64, 0x18ef6367, 0x6a9f3ad0};
{0x14143ef2, 0x01012068, 0x7f375e91, 0x71f60bbe, 0x69aa77b7, 0x26123952, 0x03a17644, 0x58255d36};
{0x1dca189d, 0x4eeb19ee, 0x2c4c7371, 0x0acc431d, 0x37e12a23, 0x2cd94321, 0x07654899, 0x6b577fa3};
{0x02a6061c, 0x32912cc2, 0x2a1679a7, 0x7fce4d0f, 0x23a14054, 0x2ae7517d, 0x27cd6d11, 0x0ffa4a2e};
{0x31ab3ade, 0x08c409ac, 0x69f9679f, 0x0850002e, 0x1c895aad, 0x325f027c, 0x5b0a7f7e, 0x690832cc};
{0x76734cd5, 0x1cbc6288, 0x1f410d17, 0x40f40fb7, 0x1a367254, 0x2efb4f28, 0x30291e8d, 0x6c42750f};
{0x191d6bab, 0x4c9948bc, 0x38d93973, 0x301033ca, 0x67487237, 0x5da34ddb, 0x48e708fc, 0x2b391db5};
{0x334367c6, 0x31cc0ae3, 0x07803e88, 0x1caf3ddd, 0x7b332460, 0x2e975d7c, 0x6f7f325e, 0x1e436a04};
{0x762964ec, 0x5eef2985, 0x47f47bd5, 0x6395595a, 0x74237ca9, 0x4d2e69a7, 0x7a0309fc, 0x2d736dc5};
{0x50de2f96, 0x780732fa, 0x5f9d37a3, 0x0e4805a9, 0x485e711f, 0x3a036ba1, 0x0c95542c, 0x6b477932};
{0x5ed60489, 0x3850626f, 0x3a5365ae, 0x38655044, 0x132429eb, 0x53877e49, 0x0b664b67, 0x1f3d3464};
{0x3b0b00ee, 0x09b62bf6, 0x785e260f, 0x25075944, 0x577f773a, 0x75872cbe, 0x023333a0, 0x2c9436c4};
{0x5d2d4c6b, 0x05430de2, 0x26fd51e4, 0x780a5bf2, 0x08524de5, 0x77361827, 0x0e193a23, 0x641f66fa};
{0x31943c76, 0x15200afe, 0x768d3b74, 0x04346ed6, 0x52605958, 0x196b17fb, 0x1f230461, 0x4f727ae0};
{0x6f346278, 0x26512a46, 0x18fa3f61, 0x200c23ca, 0x0bb56080, 0x72c427ab, 0x0723671a, 0x13a15eef};
{0x483f46d5, 0x5c8f293b, 0x52f02d7c, 0x63174086, 0x36c83e22, 0x71f66881, 0x062c7e18, 0x552b61af};
{0x06f51099, 0x30001a03, 0x0f53510b, 0x61f13336, 0x49567da2, 0x34b8013c, 0x6f8c0732, 0x794c59ac};
{0x66d508b4, 0x364923d4, 0x5a5035cd, 0x0cf80c7d, 0x567e503f, 0x5f711d78, 0x2e155c6d, 0x53064b58};
{0x0a7844b7, 0x6adb2381, 0x7d0f4dcc, 0x2343799d, 0x613c6534, 0x5f9a5d41, 0x345d7355, 0x14a77897};
{0x491d6eba, 0x0c975bf2, 0x2d74120f, 0x611e54e3, 0x574b3e58, 0x56247a08, 0x61a75f07, 0x724a5c03};
{0x53c310b8, 0x53677129, 0x4936208b, 0x7d894a67, 0x676f7b1f, 0x49f35824, 0x369d286a, 0x193b4119};
{0x7ee16990, 0x5dc176bd, 0x412603eb, 0x52d25fdf, 0x32f73b15, 0x5e570557, 0x3faa498f, 0x70407bda};
{0x30e02a86, 0x1a2e1161, 0x4ed15830, 0x3e4c5cfb, 0x63f84749, 0x7e49724c, 0x4b544759, 0x6e8e1c9b};
{0x6be76ddd, 0x3c0f5d5c, 0x5e2c5108, 0x695c3799, 0x374a7d1d, 0x14520a90, 0x3ae663ac, 0x1e305702};
{0x63d76c07, 0x23b77692, 0x5ce727a2, 0x67134cc3, 0x52de759c, 0x3b271021, 0x3b8a150a, 0x302a5883};
{0x47f8744a, 0x4dc93cf8, 0x214f4310, 0x40042a3a, 0x060c3f19, 0x285c18d9, 0x1a227907, 0x61615da6};
{0x22ae5325, 0x088a7725, 0x368065cb, 0x2d661926, 0x242955ff, 0x73127a0b, 0x44487a64, 0x2d97263a};
{0x1edc797f, 0x4d3606b8, 0x7b5727a8, 0x061249ea, 0x15043fb0, 0x5ebf035a, 0x78285948, 0x331d43ec};
{0x176f01c6, 0x15304d80, 0x12a40d92, 0x7acd258c, 0x3be25c59, 0x4c945c72, 0x16950451, 0x6a5b1b29};
{0x505b7e23, 0x089f6fc5, 0x310c507a, 0x7ecd6cd0, 0x2dfb418b, 0x0fc1613d, 0x43be5816, 0x20aa01fc};
{0x60223dd4, 0x4a30180d, 0x1c5c3ddf, 0x6cd1395d, 0x72102094, 0x223447be, 0x577a63b9, 0x1e0030b7};
{0x103d06de, 0x624c7146, 0x5b36132e, 0x017e2d15, 0x6eb90b52, 0x27ab0da7, 0x3fad4d19, 0x4b5153ff};
{0x0ecd7136, 0x5c125933, 0x72af399a, 0x54f90002, 0x12bb5e97, 0x027b3057, 0x1ffe6d82, 0x340e444b};
{0x66491c5a, 0x50854864, 0x669c496c, 0x796d68e0, 0x490667ac, 0x26c527c2, 0x02bc13fa, 0x685a3a1d};
{0x297a29d4, 0x335f7759, 0x28a667ac, 0x38ce08e1, 0x5deb764a, 0x2fef6ea6, 0x7d291a95, 0x4c0b174f};
{0x2e484b3c, 0x5d927647, 0x140750db, 0x65e2425a, 0x02aa2541, 0x215612b6, 0x77b50c61, 0x410d787d};
{0x2a301996, 0x6c9e3ce9, 0x454852fb, 0x51d74763, 0x07a96b95, 0x211a3f11, 0x700307da, 0x39814f2a};
{0x1803242f, 0x27ba4016, 0x783f0b23, 0x5a251fab, 0x356c16ba, 0x3fa875ab, 0x5d5e19f5, 0x32b21748};
{0x7ef81664, 0x5857584a, 0x439d2a70, 0x0d9c12f0, 0x37fc6660, 0x00844201, 0x6d957639, 0x03f77544};
{0x273f3bd9, 0x61472efa, 0x7c0c5ded, 0x7d7d2afa, 0x4f1512bf, 0x3e013bc8, 0x4681245f, 0x2e9062a5};
{0x09d91a26, 0x7b125be4, 0x12ad40f3, 0x0da526f1, 0x0aed3293, 0x2cb37bdf, 0x5ee64a9b, 0x66f67705};
{0x33c72ae2, 0x507f101a, 0x5c3632e1, 0x0b34526f, 0x116d73f7, 0x6caa1435, 0x19e41747, 0x39f06abd};
{0x20db42c4, 0x0d583e1f, 0x15810d6d, 0x277b22cc, 0x10834016, 0x38315511, 0x20fe0de6, 0x520525d5};
{0x69620df3, 0x4fab749f, 0x298477a6, 0x52904834, 0x123c190b, 0x2feb721b, 0x12506253, 0x6e1a03b8};
{0x0e065226, 0x7bb05963, 0x23202ac4, 0x64a509eb, 0x4cc622d1, 0x69861a01, 0x04e66d04, 0x68ac371c};
{0x47d705b4, 0x4d1231b0, 0x48bf1de5, 0x36da026e, 0x3b4a64a2, 0x000b0ca2, 0x3e8c792e, 0x785645bd};
{0x0f632e35, 0x66a36c18, 0x069257e2, 0x02ab43b4, 0x37be12ad, 0x3b387b15, 0x4fa538db, 0x02734442};
{0x22ef36cc, 0x4afe6076, 0x72af1b45, 0x2f593b48, 0x4a5f3d65, 0x69545ef1, 0x0162537e, 0x19ec0cf4};
{0x56f960d7, 0x22b818a6, 0x7ee077ad, 0x73161b91, 0x3d746b90, 0x5bd10cb7, 0x3a436655, 0x2ae34aaf};
{0x227249e4, 0x5fb55e18, 0x341c696f, 0x475770e8, 0x51420dfc, 0x0c0c2831, 0x11986cec, 0x28237986};
{0x0ad017f5, 0x38776575, 0x3f11110f, 0x5b6c40e9, 0x3def2d64, 0x2dd9474e, 0x71c90e59, 0x21832bcb};
{0x42286ba3, 0x35804bbf, 0x6dce060a, 0x1e1a6576, 0x35bc450e, 0x1c7c6b89, 0x79f7451f, 0x0c456f9b};
{0x44f12578, 0x64683ced, 0x6e2d4eef, 0x15384724, 0x0d377c0f, 0x47d60742, 0x173e6dce, 0x59db2cff};
{0x51d84cb2, 0x0aa70e93, 0x548c72bf, 0x66eb1f1b, 0x31955543, 0x62ec7022, 0x19475fc0, 0x4398175a};
{0x13637f46, 0x17146d77, 0x273d0034, 0x2dff25a9, 0x73551f7b, 0x74520cfa, 0x3faa659e, 0x7b7477b1};
{0x754c21b8, 0x31724fbb, 0x71203536, 0x691267fe, 0x52953545, 0x3ba34123, 0x22504476, 0x5f655cec};
{0x782e3f49, 0x75022979, 0x794717c8, 0x674b37e2, 0x2c50038e, 0x31d47ce0, 0x74167ab0, 0x61d5194b};
{0x244a235e, 0x10297c60, 0x20505716, 0x7fd74e49, 0x7a835fb9, 0x16eb2db5, 0x1bd97eea, 0x04f37079};
{0x695b2367, 0x56ba075d, 0x67562c92, 0x36a33d36, 0x68303832, 0x32e55f5b, 0x318955ec, 0x1c860333};
{0x2a9b0e4c, 0x211345a9, 0x12e56607, 0x1a822421, 0x5f29534a, 0x790a4900, 0x60ac1ec3, 0x6d8c4628};
{0x50f10d8a, 0x48c50189, 0x686f797a, 0x4590590d, 0x4afe714e, 0x5e0c20d3, 0x690b443a, 0x6f100ad3};
{0x28072329, 0x727920bf, 0x4da773b3, 0x3c5a7fb0, 0x0a4d129e, 0x7a496a2b, 0x1f8f37aa, 0x66761621};
{0x0cf80399, 0x0baa7667, 0x679c5d68, 0x719912d0, 0x6cc106c9, 0x4dd111b0, 0x7fa43682, 0x50fa6991};
{0x1055269d, 0x26a346c9, 0x295d15bf, 0x7ca83b1e, 0x59b8245d, 0x46f02c5f, 0x5b4b6147, 0x50fa5c8d};
{0x6f792f7c, 0x13f1285d, 0x43e45b44, 0x4c4655e5, 0x5981748d, 0x50bc665b, 0x4e5d41ac, 0x6dcc3cd7};
{0x2b4f6152, 0x73d934f0, 0x52d165d6, 0x06b47493, 0x7f321330, 0x1f476ec3, 0x6aa83741, 0x22605994};
{0x3e7a5f1b, 0x0a233dd5, 0x505019f6, 0x1b1f71b5, 0x11465a81, 0x6956373a, 0x223d1ea0, 0x250f060c};
{0x14bb1fed, 0x24632c5c, 0x4ac9019e, 0x19c60e36, 0x00836dbf, 0x57965480, 0x786d5941, 0x63f0115d};
{0x3406045e, 0x4ac74136, 0x53e66467, 0x57ad19a8, 0x08197c8d, 0x4e2600b6, 0x3c4c2a47, 0x0a4a2a97};};

uint32_t B[6][8] = {{0x000047d1, 0x000041ad, 0x000075a3, 0x000060bd, 0x00005e3c, 0x0000686b, 0x0000590e, 0x0000427a},
					{0x0000409f, 0x000075e9, 0x00002c8d, 0x00001a36, 0x00000ccf, 0x0000239e, 0x00000a3d, 0x0000742b},
					{0x00005053, 0x00003853, 0x00002432, 0x00006464, 0x00006ce7, 0x000010a4, 0x000010f0, 0x000014c0},
					{0x00004cfc, 0x00007783, 0x000067f3, 0x00000db2, 0x00006836, 0x00004eb5, 0x00002e28, 0x000078de},
					{0x000017ed, 0x00000753, 0x00001272, 0x00006dc7, 0x00003bad, 0x00006a4a, 0x00007a26, 0x0000716a},
					{0x000007C8, 0x19473440, 0x00000056, 0x5E062404, 0x0000003F, 0x43C62E91, 0x000004AF, 0x05145D7D}};


int main()
{
    XTime tStart, tEnd;
    double  ElapsedTime;

    init_platform();

    AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, 32*4, 0x0U);

    uint32_t R[16];
    uint32_t busy = 0;

    XTime_GetTime(&tStart);
    for(int i=0;i<6;i++)
    {
        AMNS_mult(R,A[i],B[i]);
        display_coeff(R,4);
    }
    display_coeff(R,4);
    XTime_GetTime(&tEnd);
    printf("Output took %llu clock cycles.\n", 2*(tEnd - tStart));
	ElapsedTime = 1.0 * (tEnd - tStart) / (COUNTS_PER_SECOND);
	printf(" Output took %.2f s.\n",ElapsedTime);
    cleanup_platform();
    return 0;
}

void AMNS_mult(uint32_t* dest, uint32_t* src1, uint32_t* src2)
{
    AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, 32*4, 0x0U);

	for(int i=0;i<4;i++)
    {
    	AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, (2*i)*4, src1[2*i]);
    	AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, (2*i+1)*4, src1[2*i+1]);
    	AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, (2*i+8)*4, src2[2*i]);
    	AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, (2*i+1+8)*4, src2[2*i+1]);
    }

    AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, 32*4, 0x3U);
    AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, 32*4, 0x7U);
    AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, 32*4, 0x5U);
    AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, 32*4, 0xfU);
    AMNS_ARITH_IP_mWriteReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, 32*4, 0xdU);

	for(int i=0;i<16;i++)
    {
    	dest[i] = AMNS_ARITH_IP_mReadReg(XPAR_AMNS_ARITH_IP_0_S00_AXI_BASEADDR, i*4+16*4);
    }
}

void display_coeff(uint32_t* src, uint32_t size)
{
    for(int i=0;i<size;i++)
    {
    	xil_printf("R[%d] : 0x%08x%08x%08x%08x\n",i,src[i*4], src[i*4+1], src[i*4+2], src[i*4+3]);
    }
}

void MgtMul(uint32_t* dest, uint32_t* src1, uint32_t* src2)
{
    uint32_t S[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    uint32_t S_MOD_R[8] = {0, 0, 0, 0, 0, 0, 0, 0};
    uint32_t T_16[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    uint32_t T_8[8] = {0, 0, 0, 0, 0, 0, 0, 0};
    uint32_t M[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    uint32_t U[8] = {0, 0, 0, 0, 0, 0, 0, 0};
    uint32_t TEMP[8] = {0, 0, 0, 0, 0, 0, 0, 0};
    uint32_t carry = 0;

    BigMul(S, src1, src2);
    for(uint32_t i=0;i<8;i++)
    {
        S_MOD_R[7-i] = S[15-i];
    }
    BigMul(T_16, S_MOD_R, V);
    for(uint32_t i=0;i<8;i++)
    {
        T_8[7-i] = T_16[15-i];
    }
    BigMul(T_16, T_8, P);
    carry = BigAdd(M, S, T_16, 0, 16);
    for(uint32_t i=0;i<8;i++)
    {
        U[7-i] = M[7-i];
    }
    if(carry == 1)
    {
        BigSub(U, U, P, 8);
    }
    else
    {
        carry = BigSub(TEMP, U, P, 8);
        if(carry == 1)
        {
            for(uint32_t i=0;i<8;i++)
            {
                U[7-i] = TEMP[7-i];
            }
        }
    }
    for(uint32_t i=0;i<8;i++)
    {
        dest[7-i] = U[7-i];
    }
}

void BigMul(uint32_t* dest, uint32_t* src1, uint32_t* src2)
{
    uint32_t accu[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    uint32_t carry = 0;
    uint32_t k = 0;
    uint64_t temp_0 = 0;
    uint32_t temp_1, temp_2, temp_3;
    for(uint32_t i=0;i<8;i++)
    {
        for(uint32_t j=0;j<8;j++)
        {
            temp_0 = ((uint64_t) src1[7-i]) * ((uint64_t) src2[7-j]);
            temp_1 = (uint32_t) temp_0;
            temp_2 = (uint32_t) (temp_0 >> 32);
            temp_3 = accu[15-(i+j)];
            accu[15-(i+j)] = accu[15-(i+j)] + temp_1;
            if(((uint64_t) temp_3 + (uint64_t) temp_1) > UINT32_MAX)
            {
                carry = 1;
            }
            else
            {
                carry = 0;
            }
            temp_3 = accu[15-(i+j+1)];
            accu[15-(i+j+1)] = accu[15-(i+j+1)] + temp_2 + carry;
            if(((uint64_t) temp_3 + (uint64_t) temp_2 + (uint64_t) carry) > UINT32_MAX)
            {
                carry = 1;
                k = 0;
                do {
                    k = k+1;
                    temp_3 = accu[15-(i+j+1+k)];
                    accu[15-(i+j+1+k)] = accu[15-(i+j+1+k)] + carry;
                    if(((uint64_t) temp_3 + 1) > UINT32_MAX)
                    {
                        carry = 1;
                    }
                    else
                    {
                        carry = 0;
                    }
                }while(carry == 1);
            }
        }
    }
    for(uint32_t i=0;i<16;i++)
    {
        dest[15-i] = accu[15-i];
    }
}

uint32_t BigSub(uint32_t* dest, uint32_t* src1, uint32_t* src2, uint32_t size)
{
    uint32_t accu[size];
    uint32_t carry = 1;
    for(uint32_t i=0;i<size;i++)
    {
        accu[size-1-i] = ~src2[size-1-i];
    }
    carry = BigAdd(dest, src1, accu, carry, size);
    return carry;
}

uint32_t BigAdd(uint32_t* dest, uint32_t* src1, uint32_t* src2, uint32_t c, uint32_t size)
{
    uint32_t accu[size];
    uint32_t carry = c;
    for(uint32_t i=0;i<size;i++)
    {
        accu[size-1-i] = src1[size-1-i] + src2[size-1-i] + carry;
        if(((uint64_t) src1[size-1-i] + (uint64_t) src2[size-1-i] + (uint64_t) carry) > UINT32_MAX)
        {
            carry = 1;
        }
        else
        {
            carry = 0;
        }
    }
    for(uint32_t i=0;i<size;i++)
    {
        dest[size-1-i] = accu[size-1-i];
    }
    return carry;
}
